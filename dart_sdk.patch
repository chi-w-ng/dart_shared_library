diff --git a/BUILD.gn b/BUILD.gn
index fb3ca5fc537..9760a092244 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -127,6 +127,10 @@ group("create_platform_sdk") {
   public_deps = [ "sdk:create_platform_sdk" ]
 }
 
+group("libdart") {
+  deps = [ "runtime/bin:libdart" ]
+}
+
 group("dart2js") {
   import("runtime/runtime_args.gni")
   if (dart_target_arch != "ia32" && dart_target_arch != "x86") {
diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index b77bab8676c..b9739fab43a 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -254,8 +254,9 @@ config("compiler") {
       cflags += [ "-fPIC" ]
       ldflags += [ "-fPIC" ]
     } else {
-      cflags += [ "-fPIE" ]
-      ldflags += [ "-fPIE" ]
+      # dart_shared_library overriden - we need -fPIC to properly build
+      cflags += [ "-fPIC" ]
+      ldflags += [ "-fPIC" ]
     }
   }
 
diff --git a/runtime/bin/BUILD.gn b/runtime/bin/BUILD.gn
index 57d7006036d..fd677355210 100644
--- a/runtime/bin/BUILD.gn
+++ b/runtime/bin/BUILD.gn
@@ -1224,3 +1224,47 @@ static_library("dart_embedder_runtime_jit") {
   output_name = "dart_embedder_runtime_jit"
   deps = [ ":dart_embedder_runtime_jit_set" ]
 }
+
+static_library("libdart") {
+  deps = [
+    ":standalone_dart_io",
+    "..:libdart_jit",
+    "../platform:libdart_platform_jit",
+    ":dart_snapshot_cc",
+    ":dart_kernel_platform_cc",
+    "//third_party/boringssl",
+    "//third_party/zlib",
+  ]
+  if (dart_runtime_mode != "release") {
+    deps += [ "../observatory:standalone_observatory_archive" ]
+  }
+
+  complete_static_lib = true
+
+  include_dirs = [
+    "..",
+    "//third_party",
+  ]
+
+  sources = [
+    "builtin.cc",
+    "error_exit.cc",
+    "error_exit.h",
+    "vmservice_impl.cc",
+    "vmservice_impl.h",
+    "snapshot_utils.cc",
+    "snapshot_utils.h",
+    "gzip.cc",
+    "gzip.h",
+    "dartdev_isolate.cc",
+    "dartdev_isolate.h",
+    "dfe.cc",
+    "dfe.h",
+    "loader.cc",
+    "loader.h",
+    "dart_embedder_api_impl.cc",
+  ]
+  if (dart_runtime_mode == "release") {
+    sources += [ "observatory_assets_empty.cc" ]
+  }
+}
